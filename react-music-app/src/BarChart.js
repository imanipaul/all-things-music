import React, { Component } from 'react'
import './App.css'
import { scaleLinear } from 'd3-scale'
import { max } from 'd3-array'
import { select } from 'd3-selection'

class BarChart extends Component {
    constructor(props) {
        super(props)
        this.createBarCart = this.createBarChart.bind(this)

    }


    componentDidMount() {
        this.createBarChart()
    }

    componentDidUpdate() {
        this.createBarChart() //whenever the component receives new props or state, it will fire the bar chart function again
    }

    createBarChart() {
        const node = this.node //comes from ref property of svg element and acts as a reference to the actual DOM node generated by React
        const dataMax = max(this.props.data)
        const yScale = scaleLinear().domain([0, dataMax]).range([0, this.props.size[1]])

        select(node)
            .selectAll('rect')
            .data(this.props.data)
            .enter()
            .append('rect')

        select(node)
            .selectAll('rect')
            .data(this.props.data)
            .exit()
            .remove()

        select(node)
            .selectAll('rect')
            .data(this.props.data)
            .style('fill', '#fe9922')
            .attr('x', (d, i) => i * 25)
            .attr('y', d => this.props.size[1] - yScale(d))
            .attr('height', d => yScale(d))
            .attr('width', 25)

    }

    render() { //just returning an SVG element waiting for D3 code
        return <svg ref={node => this.node = node} width={500} height={500}>
        </svg>
    }

}

export default BarChart

